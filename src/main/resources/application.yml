server:
  port: ${SERVER_PORT:8083}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:booking}
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:oracle:thin:@localhost:1521:xe}
    username: ${SPRING_DATASOURCE_USERNAME:dev_user}
    password: ${SPRING_DATASOURCE_PASSWORD:dev_pass}
    driver-class-name: oracle.jdbc.OracleDriver

  jpa:
    database-platform: org.hibernate.dialect.OracleDialect
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}



  rabbitmq:
    host: ${RABBITMQ_HOST:rabbit}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:user}
    password: ${RABBITMQ_PASSWORD:user_pass}
    virtual-host: ${RABBITMQ_VIRTUAL_HOST:salon-booking}

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:default_email@gmail.com}
    password: ${MAIL_PASSWORD:default_password}

eureka:
  instance:
    preferIpAddress: true
    hostname: ${EUREKA_INSTANCE_HOSTNAME:booking}
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8070/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: read-only
    health:
      probes:
        enabled: true

  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true



info:
  app:
    name: "Payment Service"
    description: "Payment Service API For Salon Booking System"
    version: "1.0.0"